version: '3'

services:
  traefik:
    restart: always
    image: traefik:v2.9.6
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./rootfs/opt/traefik:/etc/traefik
      - ~/data/traefik/secrets:/data/traefik/secrets
    environment:
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.arischow.org`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=basic-auth@file
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.tls.certresolver=cloudflareresolver
      - traefik.http.routers.dashboard.tls.domains[0].main=arischow.org
      - traefik.http.routers.dashboard.tls.domains[0].sans=*.arischow.org

  bitwarden:
    restart: always
    image: vaultwarden/server:1.25.0-alpine
    user: 1002:1002
    expose:
      - "80"
    volumes:
      - ~/data/bitwarden/bw-data/:/data/
    environment:
      - SIGNUPS_ALLOWED=false
      - SHOW_PASSWORD_HINT=false
      - LOG_FILE=/data/bitwarden.log
    labels:
      - traefik.enable=true
      - traefik.http.routers.bitwarden.rule=Host(`bitwarden.arischow.org`)
      - traefik.http.routers.bitwarden.entrypoints=websecure
      - traefik.http.routers.bitwarden.tls=true
      - traefik.http.routers.bitwarden.tls.certresolver=cloudflareresolver
      - traefik.http.routers.bitwarden.tls.domains[0].main=arischow.org
      - traefik.http.routers.bitwarden.tls.domains[0].sans=*.arischow.org

  adguardhome:
    restart: always
    image: adguard/adguardhome:v0.107.6
    expose:
      - "53/tcp"
      - "53/udp"
      - "3000"
      - "853"
      - "443"
    volumes:
      - ~/data/adguardhome/work:/opt/adguardhome/work
      - ~/data/adguardhome/conf:/opt/adguardhome/conf
      - ~/data/traefik/secrets/generated:/mnt/certs
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguard.rule=Host(`thelaughingman.arischow.org`)
      - traefik.http.routers.adguard.entrypoints=websecure
      - traefik.http.routers.adguard.tls=true
      - traefik.http.routers.adguard.tls.certresolver=cloudflareresolver
      - traefik.http.routers.adguard.tls.domains[0].main=arischow.org
      - traefik.http.routers.adguard.tls.domains[0].sans=*.arischow.org
      - traefik.http.routers.adguard.service=adguard-service
      - traefik.http.routers.adguard.middlewares=basic-auth@file
      - traefik.http.services.adguard-service.loadbalancer.server.port=3000
      - traefik.http.routers.adguard-doh.rule=Host(`thelaughingman.arischow.org`) && Path(`/dns-query`)
      - traefik.http.routers.adguard-doh.entrypoints=websecure
      - traefik.http.routers.adguard-doh.tls=true
      - traefik.http.routers.adguard-doh.service=adguard-doh-service
      - traefik.http.routers.adguard-doh.middlewares=test-ipwhitelist@file
      - traefik.http.services.adguard-doh-service.loadbalancer.server.port=443
      - traefik.http.services.adguard-doh-service.loadbalancer.server.scheme=https
      - traefik.http.services.adguard-doh-service.loadbalancer.serverstransport=adguardhome-doh-transport@file

  nginx:
    restart: always
    image: nginx:1.21.6-alpine
    expose:
      - "80"
    volumes:
      - ~/git/arisc.how/dist:/usr/share/nginx/html
      - ~/git/arisc.how/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ~/git/arisc.how/nginx/nginx.conf:/etc/nginx/nginx.conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`arisc.how`)
      - traefik.http.routers.nginx.entrypoints=websecure
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=cloudflareresolver
      - traefik.http.routers.nginx.tls.domains[0].main=arisc.how
      - traefik.http.routers.nginx.tls.domains[0].sans=*.arisc.how

  teslamate:
    image: teslamate/teslamate:latest
    restart: always
    volumes:
      - ~/data/teslamate/import:/opt/app/import
    environment:
      - ENCRYPTION_KEY=${TM_ENCRYPTION_KEY}
      - DATABASE_USER=${TM_DB_USER}
      - DATABASE_PASS=${TM_DB_PASS}
      - DATABASE_NAME=${TM_DB_NAME}
      - DATABASE_HOST=database
      - MQTT_HOST=mosquitto
      - VIRTUAL_HOST=${FQDN_TM}
      - CHECK_ORIGIN=true
      - TZ=${TM_TZ}
    expose:
      - "4000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.teslamate.middlewares=basic-auth@file
      - traefik.http.routers.teslamate-ws.rule=Host(`${FQDN_TM}`) && Path(`/live/websocket`)
      - traefik.http.routers.teslamate-ws.entrypoints=websecure
      - traefik.http.routers.teslamate-ws.tls=true
      - traefik.http.routers.teslamate.rule=Host(`${FQDN_TM}`)
      - traefik.http.routers.teslamate.entrypoints=websecure
      - traefik.http.routers.teslamate.tls.certresolver=cloudflareresolver
      - traefik.http.routers.teslamate.tls.domains[0].main=arisc.how
      - traefik.http.routers.teslamate.tls.domains[0].sans=*.arisc.how
    cap_drop:
      - all

  database:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=${TM_DB_USER}
      - POSTGRES_PASSWORD=${TM_DB_PASS}
      - POSTGRES_DB=${TM_DB_NAME}
    volumes:
      - teslamate-db:/var/lib/postgresql/data

  grafana:
    image: teslamate/grafana:latest
    restart: always
    environment:
      - DATABASE_USER=${TM_DB_USER}
      - DATABASE_PASS=${TM_DB_PASS}
      - DATABASE_NAME=${TM_DB_NAME}
      - DATABASE_HOST=database
      - GRAFANA_PASSWD=${GRAFANA_PW}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PW}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_DOMAIN=${FQDN_TM}
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - teslamate-grafana-data:/var/lib/grafana
    expose:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`${FQDN_TM}`) && (Path(`/grafana`) || PathPrefix(`/grafana/`))
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=cloudflareresolver
      - traefik.http.routers.grafana.tls.domains[0].main=arisc.how
      - traefik.http.routers.grafana.tls.domains[0].sans=*.arisc.how

  mosquitto:
    image: eclipse-mosquitto:2
    restart: always
    command: mosquitto -c /mosquitto-no-auth.conf
    ports:
      - 127.0.0.1:1883:1883
    volumes:
      - mosquitto-conf:/mosquitto/config
      - mosquitto-data:/mosquitto/data


volumes:
  teslamate-db:
  teslamate-grafana-data:
  mosquitto-conf:
  mosquitto-data:
